# README #

Módulo que gerencia:
 - o layout da tela de cadastro/alteração de usuários da Gestão de acessos (app/componentes/administrativo/gestao-acessos/usuarios/views/cadastro/index.html);
 - permite cadastrar um novo usuário 
 - permite alterar um usuário existente
 

### Pra Que Serve Este Módulo? ###

Gerenciar o cadastro de um novo usuário e a alteração de um usuário existente.  



### Diferenciação da ação Cadastro para ação Alteração ###

Esse controller recebe como parâmetro ($stateParams) o id "usuario". Caso este seja null => CADASTRO. Caso contrário => ALTERAÇÃO.
Esse parâmetro é enviado com o "$state.go('rota', {usuario: user})"


### O que é necessário para usar o módulo? ###

O módulo faz uso de módulos externos. Para cada um deles, devem ser adicionados os seguintes arquivos:
 |--------------------------------------|---------------------------------------------------|----------------------------------------|
 |                MODULO                |                   DESCRIÇÃO                       |          IMPORT (no index.html)        |
 |--------------------------------------|---------------------------------------------------|----------------------------------------|
 |              servicos                | Biblioteca que contém constantes, funções e       |              services.js               |
 |                                      | informações úteis do projeto, como os links para  |                                        |
 |                                      | interagir com a WEB API e info da empresa         |                                        |
 |--------------------------------------|---------------------------------------------------|----------------------------------------|

 
 
 ### Outras depêndencias ###

  * Controller é filho do controller principal "appCtrl" (app.js)
  * Evento "mudancaDeRota", proveniente do "appCtrl", para de fato modificar a rota/estado
  * Faz referência direta ao controller de usuários da Gestão de Acessos (gestao-acessos.usuarios.js)
  * $stateParams para receber o usuário para alteração (quando não receber, significa que é um cadastro)
  * Tabelas:
    - cliente/grupoempresa (busca por nome)
	- cliente/empresa (busca por nome fantasia)
	- administracao/pessoa (cadastro, alteração) // temp
	- administracao/webpagesroles (listagem, IDs)
    - administracao/webpagesusers (busca e-mail, busca login, cadastro, alteração)
	- administracao/webpagesusersinroles (cadastro, remoção) // temp


 
 
 
 ### Interação com a local storage ###
 
 Na local storage, está armazenado o token de acesso do usuário. O acesso é intermediado pela $localstorage, do módulo servicos (services.js)
 
 
 
 ### Interação com a WEB API ###
 
   * api/cliente/grupoempresa  
	 - GET : consulta nome do grupo empresa (coleção 0)

  * api/cliente/empresa 
	 - GET : consulta nome fantasia da empresa (coleção 0)
	 
  * api/administracao/webpagesusers
	 - GET : consulta e-mail e login, para validação (coleção 0)
	 - POST : cria novo usuário
			{
				"pessoa" : json_pessoa, 
				"webpagesusers" : json_usuario,
				"webpagesusersinroles" : [{RoleId: roleid}]
			}
	 - PUT : atualiza usuário existente	
			{
				"pessoa" : json_pessoa, 
				"webpagesusers" : json_usuario,
				"webpagesusersinroles" : [{RoleId: roleid}]
			}
			Para deletar uma associação de role a um usuário, enviar o json  "{UserId: -1, RoleId: roleid}" no array 
			(UserId tem que ser igual a -1)
   

   
### Desenvolvedores ###

Deivid Marinho - deividgfmarinho@gmail.com