# README #

Módulo que:
 - gerencia o layout da tela de dados de acesso de Gestão de Empresas (app/componentes/administracao/gestao-empresas/dados-acesso/index.html);
 - permite a visualização dos dados de acesso
 

### Pra Que Serve Este Módulo? ###

Gerenciar completamente a tela de dados de acesso de Gestão de Empresas (Administrativo).  



### O que é necessário para usar o módulo? ###

Como esse é um controller filho do controller principal "appCtrl" (app.js), ele herda todos os módulos importados por ele.
Além deles, é necessária a importação dos seguintes módulos externos.

 |----------------------------------------|---------------------------------------------------|-------------------------------------------|
 |                MODULO                  |                   DESCRIÇÃO                       |         IMPORT (no app/index.html)        |
 |----------------------------------------|---------------------------------------------------|-------------------------------------------|
 |                       
 |----------------------------------------|---------------------------------------------------|-------------------------------------------|


 
### Outras depêndencias ###

  * Evento "mudancaDeRota", proveniente do "appCtrl", para de fato modificar a rota/estado
  * $scope.token do "appCtrl"
  * $scope.grupoempresa, do "appCtrl" : grupo empresa informado pelo usuário na barra administrativa
  * Evento "alterouGrupoEmpresa", emitido pelo controller "appCtrl", para identificar a mudança do $scope.grupoempresa
  * APIS:
    - cliente/empresa
	- pos/adquirente
    - pos/loginoperadora
	- pos/operadora
	
 
 
 ### Interação com a WEB API ###
 
  * cliente/empresa
	- GET : listagem das filiais (coleção 0)
			[
			  { nu_cnpj : string,
				ds_fantasia : string,
				filial : string ou null,
				id_grupo : int
			  }
			]
	
  * pos/adquirente
    - GET : listagem as adquirentes que podem ser cadastradas (coleção 0)
			[
			  { id : int,
				nome : string, // nome que deve ser armazenado no banco para interação com o ICARD
				descricao : string,  // nome amigável
				status : int, // as que devem ser listadas são as de status = 1
				hraExecucao : int
			  }
			]	
			Filtro de nu_cnpj deve ser enviado para ser exibido corretamente	
	
  * pos/operadora
    - GET : listagem das adquirentes (coleção 0)
			[
			  { id : int,
				nmOperadora : string,
				idGrupoEmpresa : int
			  }
			]	
			Filtro de nu_cnpj deve ser enviado para ser exibido corretamente
			
 
  * pos/loginoperadora
    - GET : listagem dos dados de acesso (coleção 3)
			[
			  { id : int,
				login : string,
				senha : string,
				status : boolean,
				operadora : { id : int,
							  desOperadora : string
							},
				estabelecimento : string (ou null)
			  }
			]
			
	- DELETE : deletar dados de acesso	
				?token=....&id=id
				
    - POST : cadastrar novo dado de acesso da adquirente (relacionando com filial)
			  { login : string,
				senha : string,
				cnpj : string,
				idGrupo : int,
				estabelecimento : string (pode ser null),
				operadora : { nmOperadora : nomeAdquirente }
			  }
				
				
    - PUT : alterar dado de acesso da adquirente (relacionando com filial)
			[
			  { id : int,
				login : string,
				senha : string,
				estabelecimento : string (pode ser null)
			  }
			]
 
   

   
### Desenvolvedores ###

Deivid Marinho - deividgfmarinho@gmail.com