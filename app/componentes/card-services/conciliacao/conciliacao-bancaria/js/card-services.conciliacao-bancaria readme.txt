# README #

Módulo que:
 - gerencia o layout da tela de consolidação bancária da Conciliação (app/componentes/card-services/conciliação/conciliacao-bancaria/index.html);
 

### Pra Que Serve Este Módulo? ###

Gerenciar completamente a tela de conciliação bancária da Conciliação (Card Services).  



### O que é necessário para usar o módulo? ###

Como esse é um controller filho do controller principal "appCtrl" (app.js), ele herda todos os módulos importados por ele.
Além deles, é necessária a importação dos seguintes módulos externos.

 |----------------------------------------|---------------------------------------------------|-------------------------------------------|
 |                MODULO                  |                   DESCRIÇÃO                       |         IMPORT (no app/index.html)        |
 |----------------------------------------|---------------------------------------------------|-------------------------------------------|
 |                       
 |----------------------------------------|---------------------------------------------------|-------------------------------------------|


 
### Outras depêndencias ###

  * Evento "mudancaDeRota", proveniente do "appCtrl", para de fato modificar a rota/estado
  * $scope.token do "appCtrl"
  * Emite evento "acessouTela" no init do controller para que seja feito o log de acesso de tela
  * Evento "acessoDeTelaNotificado", proveniente do "appCtrl", para de fato exibir a tela e fazer requisições 
	=> importante para o log correto de requisições HTTP, ao qual identifica corretamente a (tela de) origem
  * $scope.grupoempresa, do "appCtrl" : grupo empresa informado pelo usuário na barra administrativa
  * Evento "alterouGrupoEmpresa", emitido pelo controller "appCtrl", para identificar a mudança do $scope.grupoempresa
  * APIS:
    - card/conciliacaobancaria
	- pos/recebimentoparcela
	
 
 
 ### Interação com a WEB API ###
 
  * card/conciliacaobancaria
    - GET : obtém as informações para conciliação bancária
	  [
		{ ExtratoBancario : null ou // se null => não tem info do lado do extrato 
							[{ Id : int, 
							   Documento : string,
							   Valor : double 
							 }], 
		  RecebimentosParcela : null ou // se null => não tem info do lado do recebimento parcela
							[{ Id : int, 
							   NumParcela : int,
							   Documento : string,
							   Valor : double,
							   Bandeira : string,
							   DataVenda : datetime,
							   DataPrevista : datetime
							 }],
		  Adquirente : string, 
		  Bandeira : string,
		  Memo : string,
		  Data : datetime,
		  ValorTotalRecebimento : double,
		  ValorTotalExtrato : double,
		  Conciliado : int, // 1 : CONCILIADO | 2 : PRÉ-CONCILIADO | 3 : NÃO-CONCILIADO
		  Conta : null ou  // vem NULL quando é não info de extrato
				  {
					cdContaCorrente : int,
					nrAgencia : string,
					nrConta : string,
					banco : { Codigo : string,
							  NomeExtenso : string
							}
				  },
		}
	  ]

	  OBS1: Obrigatório o envio de filtro de data
	  OBS2: Por ser um processamento "pesado", importante o filtrar o grupo empresa e usar um intervalo de data pequeno (de preferência, diário)
	  OBS3: Usar paginação grande, 20+ itens por página
  
	- PUT : seta os itens recebimento parcela para apontar para determinado extrato ou desassociar de um extrato
			[{ 
				idExtrato : int, // set -1 para desassociar de um extrato
				recebimentosParcela: [{ idRecebimento : int, 
									    numParcela : int
									  }]
			}]
  
  * pos/recebimentoparcela
    - PUT : altera a data de recibimento de um determinado grupo
			{   dtaRecebimentoEfetivo : datetime, // nova data
				recebimentosParcela: [{ idRecebimento : int, 
									    numParcela : int
									  }]
			}
	
	
	
 
   

   
### Desenvolvedores ###

Deivid Marinho - deividgfmarinho@gmail.com