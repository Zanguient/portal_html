angular.module("SignalR",[]).constant("$",window.jQuery).factory("Hub",["$",function(a){function t(e){var t=null;return t=e&&e.rootPath?a.hubConnection(e.rootPath,{useDefaultPath:!1}):a.hubConnection(),t.logging=e&&e.logging?!0:!1,t}function o(a){var o=!(a&&a.useSharedConnection===!1);return o?"undefined"==typeof e[a.rootPath]?e[a.rootPath]=t(a):e[a.rootPath]:t(a)}var e=[];return function(e,t){var i=this;return i.connection=o(t),i.proxy=i.connection.createHubProxy(e),i.on=function(a,e){i.proxy.on(a,e)},i.invoke=function(a,e){return i.proxy.invoke.apply(i.proxy,arguments)},i.disconnect=function(){i.connection.stop()},i.connect=function(){var a={};return t.transport&&(a.transport=t.transport),t.jsonp&&(a.jsonp=t.jsonp),a.transport||a.jsonp||(a=null),i.connection.start(a)},t&&t.listeners&&angular.forEach(t.listeners,function(a,e){i.on(e,a)}),t&&t.methods&&angular.forEach(t.methods,function(e){i[e]=function(){var t=a.makeArray(arguments);return t.unshift(e),i.invoke.apply(i,t)}}),t&&t.queryParams&&(i.connection.qs=t.queryParams),t&&t.errorHandler&&i.connection.error(t.errorHandler),t&&t.hubDisconnected&&i.connection.disconnected(t.hubDisconnected),t&&t.stateChanged&&i.connection.stateChanged(t.stateChanged),i.promise=i.connect(),i}}]);